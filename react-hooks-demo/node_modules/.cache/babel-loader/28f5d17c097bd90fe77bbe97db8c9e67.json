{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-hooks-start\\\\react-hooks-demo\\\\src\\\\demo.js\";\nimport React, { memo, useState } from 'react';\nexport const MyComponent = () => {\n  const [userInfo, setUserInfo] = useState({\n    name: ' John ',\n    lastname: 'Doe'\n  });\n  setTimeout(() => {\n    setUserInfo();\n  }, 2000);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DisplayUsername, {\n    name: userInfo.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userInfo.name,\n    onChange: e => setUserInfo({ ...userInfo,\n      name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\nexport const DisplayUsername = memo(props => {\n  console.log('只在name发生改变时更新');\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, props.name);\n}); // export const MyComponent = () => {\n//   const [filter, setFilter] = useState(\"\")\n//   const [userCollection, setUserCollection] = useState([])\n//   useEffect(() => {\n//     fetch(`http://jsonplaceholder.typicode.com/users?name_like=${filter}`)\n//       .then(response => response.json())\n//       .then(json => setUserCollection(json))\n//   }, [filter])\n//   return (\n//     // github  api  shunwuyu   repos   list\n//     <div>\n//       <input value={filter} onChange={e => setFilter(e.target.value)} />\n//       <ul>\n//         {\n//           userCollection.map((user, index) => {\n//             return (\n//               <li key={index}>\n//                 {user.name}\n//               </li>\n//             )\n//           })\n//         }\n//       </ul>\n//     </div>\n//   )\n// }\n// const setSatisfactionClass = level => {\n//   if (level < 100) {\n//     return \"very-dissatisfied\"\n//   }\n//   if (level < 200) {\n//     return \"somewhat-dissatisfied\"\n//   }\n//   if (level < 300) {\n//     return \"neither\"\n//   }\n//   if (level < 400) {\n//     return \"somewhat-satisfied\"\n//   }\n//   return \"very-satisfied\"\n// }\n// const isSameRange = (preValue, nextValue) => {\n//   const preValueClass = setSatisfactionClass(preValue.level)\n//   const nextValueClass = setSatisfactionClass(nextValue.level)\n//   return preValueClass === nextValueClass\n// }\n// export const FaceComponent = memo(props => {   // memo 缓存组件   \n//   const { level } = props;\n//   return (\n//     <div className={setSatisfactionClass(level)}>\n//     </div>\n//   )\n// }, isSameRange)\n// export const MyComponent = props => {\n//   const [userInfo, setuserInfo] = useState({\n//     name: 'John',\n//     lastname: 'Doe'\n//   })\n//   return (\n//     <>\n//       <h4>{userInfo.name}{userInfo.lastname}</h4>\n//       <input type=\"text\"\n//         value={userInfo.name}\n//         onChange={(e) => setuserInfo({\n//           ...userInfo, name: e.target.value\n//         })}\n//       />\n//       <input type=\"text\"\n//         value={userInfo.lastname}\n//         onChange={(e) => setuserInfo({\n//           ...userInfo, lastname: e.target.value\n//         })}\n//       />\n//     </>\n//   )\n// }\n// export const MyComponent = props => {\n//   // JSX -> DOM node\n//   const [myName, setmyName] = React.useState('John Doe')\n//   return (\n//     <>\n//       <h4>{myName}</h4>\n//       <input type=\"text\" value={myName} \n//       onChange={(e) => setmyName(e.target.value)}>\n//       </input>\n//     </>\n//   )\n// }\n// export const MyComponent = () => {\n//   const [username, setusername] = React.useState(\"\");\n//   // unmount\n//   useEffect(() => {\n//     setTimeout(() => {\n//       setusername(\"超\")\n//     }, 1500)\n//   }, [])\n//   return (\n//     <>\n//       <h4>{username}</h4>\n//       <input \n//         type=\"text\" \n//         value={username} \n//         onChange={(e) => setusername(e.target.value)} \n//       />\n//     </>\n//   )\n// }\n// export const MyComponent = () => {\n//   const [visible, setvisible] = useState(false);   // 不是共享状态  用useState\n//   return (\n//     <>\n//       {visible && <MyChildComponent />}\n//       <button onClick={() => setvisible(!visible)}>\n//         Toggle Child component visibility\n//       </button>\n//     </>\n//   )\n// }\n// const MyChildComponent = () => {\n//   const [userInfo, setuserInfo] = useState({\n//     name: 'John',\n//     lastname: 'Doe'\n//   })\n//   useEffect(() => {\n//     console.log('called when the component is mounted.');\n//     return (\n//       () => {\n//         console.log('Called on component unmounted, check the [] on the react use effect')\n//       }\n//     )\n//   })\n//   return (\n//     <div>\n//       <h3>\n//         {userInfo.name} {userInfo.lastname}\n//       </h3>\n//       <input \n//         type=\"text\"\n//         onChange={e => setuserInfo({...userInfo, name: e.target.value})}\n//       />\n//     </div>\n//   )\n// }","map":{"version":3,"sources":["E:/react-hooks-start/react-hooks-demo/src/demo.js"],"names":["React","memo","useState","MyComponent","userInfo","setUserInfo","name","lastname","setTimeout","e","target","value","DisplayUsername","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;AACvCI,IAAAA,IAAI,EAAE,QADiC;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;AAKAC,EAAAA,UAAU,CAAC,MAAM;AACfH,IAAAA,WAAW;AACZ,GAFS,EAER,IAFQ,CAAV;AAGA,sBACE,uDACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAED,QAAQ,CAACE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEF,QAAQ,CAACE,IAFlB;AAGE,IAAA,QAAQ,EAAEG,CAAC,IAAIJ,WAAW,CAAC,EACzB,GAAGD,QADsB;AAEzBE,MAAAA,IAAI,EAAEG,CAAC,CAACC,MAAF,CAASC;AAFU,KAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAaD,CAtBM;AAwBP,OAAO,MAAMC,eAAe,GAAGX,IAAI,CAACY,KAAK,IAAI;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACP,IAAX,CAAP;AACD,CAHkC,CAA5B,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { memo, useState } from 'react'\r\n\r\nexport const MyComponent = () => {\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: ' John ',\r\n    lastname: 'Doe'\r\n  })\r\n\r\n  setTimeout(() => {\r\n    setUserInfo()\r\n  },2000)\r\n  return (\r\n    <>\r\n      <DisplayUsername name={userInfo.name} />\r\n      <input \r\n        type=\"text\"\r\n        value={userInfo.name}\r\n        onChange={e => setUserInfo({\r\n          ...userInfo,\r\n          name: e.target.value\r\n        })}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const DisplayUsername = memo(props => {\r\n  console.log('只在name发生改变时更新')\r\n  return <h3>{props.name}</h3>\r\n})\r\n\r\n\r\n\r\n\r\n// export const MyComponent = () => {\r\n//   const [filter, setFilter] = useState(\"\")\r\n//   const [userCollection, setUserCollection] = useState([])\r\n//   useEffect(() => {\r\n//     fetch(`http://jsonplaceholder.typicode.com/users?name_like=${filter}`)\r\n//       .then(response => response.json())\r\n//       .then(json => setUserCollection(json))\r\n//   }, [filter])\r\n  \r\n//   return (\r\n//     // github  api  shunwuyu   repos   list\r\n//     <div>\r\n//       <input value={filter} onChange={e => setFilter(e.target.value)} />\r\n//       <ul>\r\n//         {\r\n//           userCollection.map((user, index) => {\r\n//             return (\r\n//               <li key={index}>\r\n//                 {user.name}\r\n//               </li>\r\n//             )\r\n//           })\r\n//         }\r\n//       </ul>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const setSatisfactionClass = level => {\r\n//   if (level < 100) {\r\n//     return \"very-dissatisfied\"\r\n//   }\r\n//   if (level < 200) {\r\n//     return \"somewhat-dissatisfied\"\r\n//   }\r\n//   if (level < 300) {\r\n//     return \"neither\"\r\n//   }\r\n//   if (level < 400) {\r\n//     return \"somewhat-satisfied\"\r\n//   }\r\n//   return \"very-satisfied\"\r\n// }\r\n\r\n// const isSameRange = (preValue, nextValue) => {\r\n//   const preValueClass = setSatisfactionClass(preValue.level)\r\n//   const nextValueClass = setSatisfactionClass(nextValue.level)\r\n//   return preValueClass === nextValueClass\r\n// }\r\n\r\n// export const FaceComponent = memo(props => {   // memo 缓存组件   \r\n  \r\n//   const { level } = props;\r\n//   return (\r\n//     <div className={setSatisfactionClass(level)}>\r\n\r\n//     </div>\r\n//   )\r\n// }, isSameRange)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const MyComponent = props => {\r\n//   const [userInfo, setuserInfo] = useState({\r\n//     name: 'John',\r\n//     lastname: 'Doe'\r\n//   })\r\n//   return (\r\n//     <>\r\n//       <h4>{userInfo.name}{userInfo.lastname}</h4>\r\n//       <input type=\"text\"\r\n//         value={userInfo.name}\r\n//         onChange={(e) => setuserInfo({\r\n//           ...userInfo, name: e.target.value\r\n//         })}\r\n//       />\r\n//       <input type=\"text\"\r\n//         value={userInfo.lastname}\r\n//         onChange={(e) => setuserInfo({\r\n//           ...userInfo, lastname: e.target.value\r\n//         })}\r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n\r\n// export const MyComponent = props => {\r\n//   // JSX -> DOM node\r\n//   const [myName, setmyName] = React.useState('John Doe')\r\n//   return (\r\n//     <>\r\n//       <h4>{myName}</h4>\r\n//       <input type=\"text\" value={myName} \r\n//       onChange={(e) => setmyName(e.target.value)}>\r\n\r\n//       </input>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export const MyComponent = () => {\r\n//   const [username, setusername] = React.useState(\"\");\r\n//   // unmount\r\n//   useEffect(() => {\r\n//     setTimeout(() => {\r\n//       setusername(\"超\")\r\n//     }, 1500)\r\n//   }, [])\r\n//   return (\r\n//     <>\r\n//       <h4>{username}</h4>\r\n//       <input \r\n//         type=\"text\" \r\n//         value={username} \r\n//         onChange={(e) => setusername(e.target.value)} \r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export const MyComponent = () => {\r\n//   const [visible, setvisible] = useState(false);   // 不是共享状态  用useState\r\n//   return (\r\n//     <>\r\n//       {visible && <MyChildComponent />}\r\n//       <button onClick={() => setvisible(!visible)}>\r\n//         Toggle Child component visibility\r\n//       </button>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// const MyChildComponent = () => {\r\n//   const [userInfo, setuserInfo] = useState({\r\n//     name: 'John',\r\n//     lastname: 'Doe'\r\n//   })\r\n//   useEffect(() => {\r\n//     console.log('called when the component is mounted.');\r\n//     return (\r\n//       () => {\r\n//         console.log('Called on component unmounted, check the [] on the react use effect')\r\n//       }\r\n//     )\r\n//   })\r\n//   return (\r\n//     <div>\r\n//       <h3>\r\n//         {userInfo.name} {userInfo.lastname}\r\n//       </h3>\r\n//       <input \r\n//         type=\"text\"\r\n//         onChange={e => setuserInfo({...userInfo, name: e.target.value})}\r\n//       />\r\n//     </div>\r\n//   )\r\n// }"]},"metadata":{},"sourceType":"module"}