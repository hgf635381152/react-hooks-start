{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-hooks-start\\\\react-hooks-demo\\\\src\\\\demo.js\";\nimport React, { useState } from \"react\";\nexport const MyComponent = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [userCollection, setUserCollection] = React.useState([]);\n  React.useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/users?name_like=${filter}`).then(response => response.json()).then(json => setUserCollection(json));\n  }, [filter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: filter,\n    onChange: e => setFilter(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, userCollection.map((user, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, user.name))));\n}; // import React, { useState, useEffect, useRef, useReducer } from 'react'\n// const userInfoReducer = (state, action) => {\n//   switch(action.type) {\n//     case \"setusername\":\n//       return {\n//         ...state,\n//         name: action.payload\n//       }\n//     case \"setlastname\":\n//       return {\n//         ...state,\n//         lastname: action.payload\n//       }\n//     default:\n//       return state\n//   }\n// }\n// export const MyComponent = () => {\n//   const [reducer, dispatch] = useReducer(userInfoReducer, {\n//     name: 'John',\n//     lastname: 'Doe'\n//   })\n//   return (\n//     <>\n//       <h3>{reducer.name} {reducer.lastname}</h3>\n//       <Editusername name={reducer.name} dispatch={dispatch}/>\n//       <input \n//         type=\"text\" \n//         value={reducer.lastname}\n//         onChange={e => dispatch({\n//           type: \"setlastname\",\n//           payload: e.target.value\n//         })}\n//       />\n//     </>\n//   )\n// }\n// export const Editusername = React.memo(props => {\n//   console.log(\"Hey when name get updated, check React.memo\")\n//   return (\n//     <input\n//       type=\"text\"\n//       value={props.name}\n//       onChange={e => props.dispatch({\n//         type: \"setusername\",\n//         payload: e.target.value\n//       })}\n//     />\n//   )\n// })\n// export const MyComponent = () => {\n//   const [visible, setVisible] = useState(false)\n//   // mount unmount\n//   return (\n//     <>\n//       {visible && <MyChildComponent/>}\n//       <button onClick={() => setVisible(!visible)}>\n//         Toggle Child component visibility\n//       </button>\n//     </>\n//   )\n// }\n// export const MyChildComponent = () => {\n//   const [filter, setFilter] = useState('')\n//   const [userCollection, setUserCollection] = useState([])\n//   const mountedRef = useRef(false)\n//   useEffect(() => {\n//     mountedRef.current = true\n//     return () => {\n//       mountedRef.current = false\n//     }\n//   })\n//   const setSafeUserCollection = (userCollection) => {\n//     mountedRef.current && setUserCollection(userCollection)\n//   }\n//   useEffect(() => {\n//     setTimeout(() => {\n//       fetch(`https://jsonplaceholder.typicode.com/users?name_like=${filter}`)\n//       .then(response => response.json())\n//       // 不能做\n//       .then(json => setSafeUserCollection(json))\n//     }, 2500)\n//   }, [filter])\n//   return (\n//     <div>\n//       <input \n//         type=\"text\" \n//         value={filter}\n//         onChange={e => setFilter(e.target.value)}\n//       />\n//       <ul>\n//         {\n//           userCollection.map((user, index) => (\n//           <li key={index}>{user.name}</li>\n//           ))\n//         }\n//       </ul>\n//     </div>\n//   )\n// }\n// export const MyComponent = () => {\n//   const [message ,setMessage] = useState('initial message')   \n//   const [seconds, setSeconds] = useState(0)\n//   const secondsRef = React.useRef(seconds);   // useRef  冲破函数式编程带来的闭包的副作用\n//   useEffect(() => {\n//     setTimeout(() => {\n//       console.log(seconds)\n//       setSeconds(1)\n//       secondsRef.current = 1\n//     },1000)\n//     setTimeout(() => {\n//       setMessage(`Total seconds: ${secondsRef.current}`)\n//     }, 2000)\n//   }, [])\n//   return (\n//     <>\n//       <h3>{message}</h3>\n//       <h4>{seconds}</h4>\n//     </>\n//   )\n// }\n// export const MyComponent = () => {\n//   const [userInfo, setUserInfo] = useState({\n//     name: ' John ',\n//     lastname: 'Doe'\n//   })\n//   setTimeout(() => {\n//     setUserInfo({\n//       ...userInfo,\n//       name: ' John '\n//     })\n//   }, 2000)\n//   return (\n//     <>\n//       <DisplayUsername name={userInfo.name} />\n//       <input \n//         type=\"text\"\n//         value={userInfo.name}\n//         onChange={e => setUserInfo({\n//           ...userInfo,\n//           name: e.target.value\n//         })}\n//       />\n//     </>\n//   )\n// }\n// export const DisplayUsername = memo(props => {\n//   console.log('只在name发生改变时更新')\n//   return <h3>{props.name}</h3>\n// })\n// export const MyComponent = () => {\n//   const [filter, setFilter] = useState(\"\")\n//   const [userCollection, setUserCollection] = useState([])\n//   useEffect(() => {\n//     fetch(`http://jsonplaceholder.typicode.com/users?name_like=${filter}`)\n//       .then(response => response.json())\n//       .then(json => setUserCollection(json))\n//   }, [filter])\n//   return (\n//     // github  api  shunwuyu   repos   list\n//     <div>\n//       <input value={filter} onChange={e => setFilter(e.target.value)} />\n//       <ul>\n//         {\n//           userCollection.map((user, index) => {\n//             return (\n//               <li key={index}>\n//                 {user.name}\n//               </li>\n//             )\n//           })\n//         }\n//       </ul>\n//     </div>\n//   )\n// }\n// const setSatisfactionClass = level => {\n//   if (level < 100) {\n//     return \"very-dissatisfied\"\n//   }\n//   if (level < 200) {\n//     return \"somewhat-dissatisfied\"\n//   }\n//   if (level < 300) {\n//     return \"neither\"\n//   }\n//   if (level < 400) {\n//     return \"somewhat-satisfied\"\n//   }\n//   return \"very-satisfied\"\n// }\n// const isSameRange = (preValue, nextValue) => {\n//   const preValueClass = setSatisfactionClass(preValue.level)\n//   const nextValueClass = setSatisfactionClass(nextValue.level)\n//   return preValueClass === nextValueClass\n// }\n// export const FaceComponent = memo(props => {   // memo 缓存组件   \n//   const { level } = props;\n//   return (\n//     <div className={setSatisfactionClass(level)}>\n//     </div>\n//   )\n// }, isSameRange)\n// export const MyComponent = props => {\n//   const [userInfo, setuserInfo] = useState({\n//     name: 'John',\n//     lastname: 'Doe'\n//   })\n//   return (\n//     <>\n//       <h4>{userInfo.name}{userInfo.lastname}</h4>\n//       <input type=\"text\"\n//         value={userInfo.name}\n//         onChange={(e) => setuserInfo({\n//           ...userInfo, name: e.target.value\n//         })}\n//       />\n//       <input type=\"text\"\n//         value={userInfo.lastname}\n//         onChange={(e) => setuserInfo({\n//           ...userInfo, lastname: e.target.value\n//         })}\n//       />\n//     </>\n//   )\n// }\n// export const MyComponent = props => {\n//   // JSX -> DOM node\n//   const [myName, setmyName] = React.useState('John Doe')\n//   return (\n//     <>\n//       <h4>{myName}</h4>\n//       <input type=\"text\" value={myName} \n//       onChange={(e) => setmyName(e.target.value)}>\n//       </input>\n//     </>\n//   )\n// }\n// export const MyComponent = () => {\n//   const [username, setusername] = React.useState(\"\");\n//   // unmount\n//   useEffect(() => {\n//     setTimeout(() => {\n//       setusername(\"超\")\n//     }, 1500)\n//   }, [])\n//   return (\n//     <>\n//       <h4>{username}</h4>\n//       <input \n//         type=\"text\" \n//         value={username} \n//         onChange={(e) => setusername(e.target.value)} \n//       />\n//     </>\n//   )\n// }\n// export const MyComponent = () => {\n//   const [visible, setvisible] = useState(false);   // 不是共享状态  用useState\n//   return (\n//     <>\n//       {visible && <MyChildComponent />}\n//       <button onClick={() => setvisible(!visible)}>\n//         Toggle Child component visibility\n//       </button>\n//     </>\n//   )\n// }\n// const MyChildComponent = () => {\n//   const [userInfo, setuserInfo] = useState({\n//     name: 'John',\n//     lastname: 'Doe'\n//   })\n//   useEffect(() => {\n//     console.log('called when the component is mounted.');\n//     return (\n//       () => {\n//         console.log('Called on component unmounted, check the [] on the react use effect')\n//       }\n//     )\n//   })\n//   return (\n//     <div>\n//       <h3>\n//         {userInfo.name} {userInfo.lastname}\n//       </h3>\n//       <input \n//         type=\"text\"\n//         onChange={e => setuserInfo({...userInfo, name: e.target.value})}\n//       />\n//     </div>\n//   )\n// }","map":{"version":3,"sources":["E:/react-hooks-start/react-hooks-demo/src/demo.js"],"names":["React","useState","MyComponent","filter","setFilter","userCollection","setUserCollection","useEffect","fetch","then","response","json","e","target","value","map","user","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCN,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5C;AAEAD,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAE,wDAAuDL,MAAO,EAAhE,CAAL,CACKM,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAIL,iBAAiB,CAACK,IAAD,CAFnC;AAGD,GAJD,EAIG,CAACR,MAAD,CAJH;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEA,MAAd;AAAsB,IAAA,QAAQ,EAAES,CAAC,IAAIR,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,cAAc,CAACU,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,kBAClB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,IAAI,CAACE,IAAtB,CADD,CADH,CAFF,CADF;AAUD,CApsourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const MyComponent = () => {\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [userCollection, setUserCollection] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/users?name_like=${filter}`)\r\n        .then(response => response.json())\r\n        .then(json => setUserCollection(json));\r\n  }, [filter]);\r\n\r\n  return (\r\n    <div>\r\n      <input value={filter} onChange={e => setFilter(e.target.value)} />\r\n      <ul>\r\n        {userCollection.map((user, index) => (\r\n          <li key={index}>{user.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useRef, useReducer } from 'react'\r\n\r\n// const userInfoReducer = (state, action) => {\r\n//   switch(action.type) {\r\n//     case \"setusername\":\r\n//       return {\r\n//         ...state,\r\n//         name: action.payload\r\n//       }\r\n//     case \"setlastname\":\r\n//       return {\r\n//         ...state,\r\n//         lastname: action.payload\r\n//       }\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n// export const MyComponent = () => {\r\n//   const [reducer, dispatch] = useReducer(userInfoReducer, {\r\n//     name: 'John',\r\n//     lastname: 'Doe'\r\n//   })\r\n//   return (\r\n//     <>\r\n//       <h3>{reducer.name} {reducer.lastname}</h3>\r\n//       <Editusername name={reducer.name} dispatch={dispatch}/>\r\n//       <input \r\n//         type=\"text\" \r\n//         value={reducer.lastname}\r\n//         onChange={e => dispatch({\r\n//           type: \"setlastname\",\r\n//           payload: e.target.value\r\n//         })}\r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export const Editusername = React.memo(props => {\r\n//   console.log(\"Hey when name get updated, check React.memo\")\r\n//   return (\r\n//     <input\r\n//       type=\"text\"\r\n//       value={props.name}\r\n//       onChange={e => props.dispatch({\r\n//         type: \"setusername\",\r\n//         payload: e.target.value\r\n//       })}\r\n//     />\r\n//   )\r\n// })\r\n\r\n\r\n\r\n\r\n\r\n// export const MyComponent = () => {\r\n//   const [visible, setVisible] = useState(false)\r\n//   // mount unmount\r\n//   return (\r\n//     <>\r\n//       {visible && <MyChildComponent/>}\r\n//       <button onClick={() => setVisible(!visible)}>\r\n//         Toggle Child component visibility\r\n//       </button>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export const MyChildComponent = () => {\r\n//   const [filter, setFilter] = useState('')\r\n//   const [userCollection, setUserCollection] = useState([])\r\n//   const mountedRef = useRef(false)\r\n\r\n//   useEffect(() => {\r\n//     mountedRef.current = true\r\n//     return () => {\r\n//       mountedRef.current = false\r\n//     }\r\n//   })\r\n\r\n//   const setSafeUserCollection = (userCollection) => {\r\n//     mountedRef.current && setUserCollection(userCollection)\r\n//   }\r\n//   useEffect(() => {\r\n//     setTimeout(() => {\r\n//       fetch(`https://jsonplaceholder.typicode.com/users?name_like=${filter}`)\r\n//       .then(response => response.json())\r\n//       // 不能做\r\n//       .then(json => setSafeUserCollection(json))\r\n//     }, 2500)\r\n//   }, [filter])\r\n\r\n//   return (\r\n//     <div>\r\n//       <input \r\n//         type=\"text\" \r\n//         value={filter}\r\n//         onChange={e => setFilter(e.target.value)}\r\n//       />\r\n//       <ul>\r\n//         {\r\n//           userCollection.map((user, index) => (\r\n//           <li key={index}>{user.name}</li>\r\n//           ))\r\n//         }\r\n//       </ul>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n// export const MyComponent = () => {\r\n//   const [message ,setMessage] = useState('initial message')   \r\n//   const [seconds, setSeconds] = useState(0)\r\n//   const secondsRef = React.useRef(seconds);   // useRef  冲破函数式编程带来的闭包的副作用\r\n\r\n//   useEffect(() => {\r\n//     setTimeout(() => {\r\n//       console.log(seconds)\r\n//       setSeconds(1)\r\n//       secondsRef.current = 1\r\n//     },1000)\r\n\r\n//     setTimeout(() => {\r\n//       setMessage(`Total seconds: ${secondsRef.current}`)\r\n//     }, 2000)\r\n//   }, [])\r\n  \r\n//   return (\r\n//     <>\r\n//       <h3>{message}</h3>\r\n//       <h4>{seconds}</h4>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// export const MyComponent = () => {\r\n//   const [userInfo, setUserInfo] = useState({\r\n//     name: ' John ',\r\n//     lastname: 'Doe'\r\n//   })\r\n\r\n//   setTimeout(() => {\r\n//     setUserInfo({\r\n//       ...userInfo,\r\n//       name: ' John '\r\n//     })\r\n//   }, 2000)\r\n  \r\n//   return (\r\n//     <>\r\n//       <DisplayUsername name={userInfo.name} />\r\n//       <input \r\n//         type=\"text\"\r\n//         value={userInfo.name}\r\n//         onChange={e => setUserInfo({\r\n//           ...userInfo,\r\n//           name: e.target.value\r\n//         })}\r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export const DisplayUsername = memo(props => {\r\n//   console.log('只在name发生改变时更新')\r\n//   return <h3>{props.name}</h3>\r\n// })\r\n\r\n\r\n\r\n\r\n// export const MyComponent = () => {\r\n//   const [filter, setFilter] = useState(\"\")\r\n//   const [userCollection, setUserCollection] = useState([])\r\n//   useEffect(() => {\r\n//     fetch(`http://jsonplaceholder.typicode.com/users?name_like=${filter}`)\r\n//       .then(response => response.json())\r\n//       .then(json => setUserCollection(json))\r\n//   }, [filter])\r\n  \r\n//   return (\r\n//     // github  api  shunwuyu   repos   list\r\n//     <div>\r\n//       <input value={filter} onChange={e => setFilter(e.target.value)} />\r\n//       <ul>\r\n//         {\r\n//           userCollection.map((user, index) => {\r\n//             return (\r\n//               <li key={index}>\r\n//                 {user.name}\r\n//               </li>\r\n//             )\r\n//           })\r\n//         }\r\n//       </ul>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const setSatisfactionClass = level => {\r\n//   if (level < 100) {\r\n//     return \"very-dissatisfied\"\r\n//   }\r\n//   if (level < 200) {\r\n//     return \"somewhat-dissatisfied\"\r\n//   }\r\n//   if (level < 300) {\r\n//     return \"neither\"\r\n//   }\r\n//   if (level < 400) {\r\n//     return \"somewhat-satisfied\"\r\n//   }\r\n//   return \"very-satisfied\"\r\n// }\r\n\r\n// const isSameRange = (preValue, nextValue) => {\r\n//   const preValueClass = setSatisfactionClass(preValue.level)\r\n//   const nextValueClass = setSatisfactionClass(nextValue.level)\r\n//   return preValueClass === nextValueClass\r\n// }\r\n\r\n// export const FaceComponent = memo(props => {   // memo 缓存组件   \r\n  \r\n//   const { level } = props;\r\n//   return (\r\n//     <div className={setSatisfactionClass(level)}>\r\n\r\n//     </div>\r\n//   )\r\n// }, isSameRange)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const MyComponent = props => {\r\n//   const [userInfo, setuserInfo] = useState({\r\n//     name: 'John',\r\n//     lastname: 'Doe'\r\n//   })\r\n//   return (\r\n//     <>\r\n//       <h4>{userInfo.name}{userInfo.lastname}</h4>\r\n//       <input type=\"text\"\r\n//         value={userInfo.name}\r\n//         onChange={(e) => setuserInfo({\r\n//           ...userInfo, name: e.target.value\r\n//         })}\r\n//       />\r\n//       <input type=\"text\"\r\n//         value={userInfo.lastname}\r\n//         onChange={(e) => setuserInfo({\r\n//           ...userInfo, lastname: e.target.value\r\n//         })}\r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n\r\n// export const MyComponent = props => {\r\n//   // JSX -> DOM node\r\n//   const [myName, setmyName] = React.useState('John Doe')\r\n//   return (\r\n//     <>\r\n//       <h4>{myName}</h4>\r\n//       <input type=\"text\" value={myName} \r\n//       onChange={(e) => setmyName(e.target.value)}>\r\n\r\n//       </input>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export const MyComponent = () => {\r\n//   const [username, setusername] = React.useState(\"\");\r\n//   // unmount\r\n//   useEffect(() => {\r\n//     setTimeout(() => {\r\n//       setusername(\"超\")\r\n//     }, 1500)\r\n//   }, [])\r\n//   return (\r\n//     <>\r\n//       <h4>{username}</h4>\r\n//       <input \r\n//         type=\"text\" \r\n//         value={username} \r\n//         onChange={(e) => setusername(e.target.value)} \r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export const MyComponent = () => {\r\n//   const [visible, setvisible] = useState(false);   // 不是共享状态  用useState\r\n//   return (\r\n//     <>\r\n//       {visible && <MyChildComponent />}\r\n//       <button onClick={() => setvisible(!visible)}>\r\n//         Toggle Child component visibility\r\n//       </button>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// const MyChildComponent = () => {\r\n//   const [userInfo, setuserInfo] = useState({\r\n//     name: 'John',\r\n//     lastname: 'Doe'\r\n//   })\r\n//   useEffect(() => {\r\n//     console.log('called when the component is mounted.');\r\n//     return (\r\n//       () => {\r\n//         console.log('Called on component unmounted, check the [] on the react use effect')\r\n//       }\r\n//     )\r\n//   })\r\n//   return (\r\n//     <div>\r\n//       <h3>\r\n//         {userInfo.name} {userInfo.lastname}\r\n//       </h3>\r\n//       <input \r\n//         type=\"text\"\r\n//         onChange={e => setuserInfo({...userInfo, name: e.target.value})}\r\n//       />\r\n//     </div>\r\n//   )\r\n// }"]},"metadata":{},"sourceType":"module"}