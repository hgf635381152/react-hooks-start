{"ast":null,"code":"import React, { memo } from 'react';\n\nconst setSatisfactionClass = level => {\n  if (level < 100) {\n    return \"very-dissatisfied\";\n  }\n\n  if (level < 200) {\n    return \"somewhat-dissatisfied\";\n  }\n\n  if (level < 300) {\n    return \"neither\";\n  }\n\n  if (level < 400) {\n    return \"somewhat-satisfied\";\n  }\n\n  return \"very-satisfied\";\n};\n\nconst isSameRange = (preValue, nextValue) => {\n  const preValueClass = setSatisfactionClass(preValue.level);\n  const nextValueClass = setSatisfactionClass(nextValue.level);\n  return preValueClass === nextValueClass;\n};\n\nexport const FaceComponent = memo(props => {\n  // memo 缓存组件   \n  const {\n    level\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}, isSameRange); // export const MyComponent = props => {\n//   const [userInfo, setuserInfo] = useState({\n//     name: 'John',\n//     lastname: 'Doe'\n//   })\n//   return (\n//     <>\n//       <h4>{userInfo.name}{userInfo.lastname}</h4>\n//       <input type=\"text\"\n//         value={userInfo.name}\n//         onChange={(e) => setuserInfo({\n//           ...userInfo, name: e.target.value\n//         })}\n//       />\n//       <input type=\"text\"\n//         value={userInfo.lastname}\n//         onChange={(e) => setuserInfo({\n//           ...userInfo, lastname: e.target.value\n//         })}\n//       />\n//     </>\n//   )\n// }\n// export const MyComponent = props => {\n//   // JSX -> DOM node\n//   const [myName, setmyName] = React.useState('John Doe')\n//   return (\n//     <>\n//       <h4>{myName}</h4>\n//       <input type=\"text\" value={myName} \n//       onChange={(e) => setmyName(e.target.value)}>\n//       </input>\n//     </>\n//   )\n// }\n// export const MyComponent = () => {\n//   const [username, setusername] = React.useState(\"\");\n//   // unmount\n//   useEffect(() => {\n//     setTimeout(() => {\n//       setusername(\"超\")\n//     }, 1500)\n//   }, [])\n//   return (\n//     <>\n//       <h4>{username}</h4>\n//       <input \n//         type=\"text\" \n//         value={username} \n//         onChange={(e) => setusername(e.target.value)} \n//       />\n//     </>\n//   )\n// }\n// export const MyComponent = () => {\n//   const [visible, setvisible] = useState(false);   // 不是共享状态  用useState\n//   return (\n//     <>\n//       {visible && <MyChildComponent />}\n//       <button onClick={() => setvisible(!visible)}>\n//         Toggle Child component visibility\n//       </button>\n//     </>\n//   )\n// }\n// const MyChildComponent = () => {\n//   const [userInfo, setuserInfo] = useState({\n//     name: 'John',\n//     lastname: 'Doe'\n//   })\n//   useEffect(() => {\n//     console.log('called when the component is mounted.');\n//     return (\n//       () => {\n//         console.log('Called on component unmounted, check the [] on the react use effect')\n//       }\n//     )\n//   })\n//   return (\n//     <div>\n//       <h3>\n//         {userInfo.name} {userInfo.lastname}\n//       </h3>\n//       <input \n//         type=\"text\"\n//         onChange={e => setuserInfo({...userInfo, name: e.target.value})}\n//       />\n//     </div>\n//   )\n// }","map":{"version":3,"sources":["E:/react-hooks-start/react-hooks-demo/src/demo.js"],"names":["React","memo","setSatisfactionClass","level","isSameRange","preValue","nextValue","preValueClass","nextValueClass","FaceComponent","props"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;AAGA,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpC,MAAIA,KAAK,GAAG,GAAZ,EAAiB;AACf,WAAO,mBAAP;AACD;;AACD,MAAIA,KAAK,GAAG,GAAZ,EAAiB;AACf,WAAO,uBAAP;AACD;;AACD,MAAIA,KAAK,GAAG,GAAZ,EAAiB;AACf,WAAO,SAAP;AACD;;AACD,MAAIA,KAAK,GAAG,GAAZ,EAAiB;AACf,WAAO,oBAAP;AACD;;AACD,SAAO,gBAAP;AACD,CAdD;;AAgBA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAC3C,QAAMC,aAAa,GAAGL,oBAAoB,CAACG,QAAQ,CAACF,KAAV,CAA1C;AACA,QAAMK,cAAc,GAAGN,oBAAoB,CAACI,SAAS,CAACH,KAAX,CAA3C;AACA,SAAOI,aAAa,KAAKC,cAAzB;AACD,CAJD;;AAMA,OAAO,MAAMC,aAAa,GAAGR,IAAI,CAACS,KAAK,IAAI;AAAI;AAE7C,QAAM;AAAEP,IAAAA;AAAF,MAAYO,KAAlB;AACA,sBACE,yCADF;AAID,CAPgC,EAO9BN,WAP8B,CAA1B,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { memo } from 'react'\r\n\r\n\r\nconst setSatisfactionClass = level => {\r\n  if (level < 100) {\r\n    return \"very-dissatisfied\"\r\n  }\r\n  if (level < 200) {\r\n    return \"somewhat-dissatisfied\"\r\n  }\r\n  if (level < 300) {\r\n    return \"neither\"\r\n  }\r\n  if (level < 400) {\r\n    return \"somewhat-satisfied\"\r\n  }\r\n  return \"very-satisfied\"\r\n}\r\n\r\nconst isSameRange = (preValue, nextValue) => {\r\n  const preValueClass = setSatisfactionClass(preValue.level)\r\n  const nextValueClass = setSatisfactionClass(nextValue.level)\r\n  return preValueClass === nextValueClass\r\n}\r\n\r\nexport const FaceComponent = memo(props => {   // memo 缓存组件   \r\n  \r\n  const { level } = props;\r\n  return (\r\n    <>\r\n    </>\r\n  )\r\n}, isSameRange)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const MyComponent = props => {\r\n//   const [userInfo, setuserInfo] = useState({\r\n//     name: 'John',\r\n//     lastname: 'Doe'\r\n//   })\r\n//   return (\r\n//     <>\r\n//       <h4>{userInfo.name}{userInfo.lastname}</h4>\r\n//       <input type=\"text\"\r\n//         value={userInfo.name}\r\n//         onChange={(e) => setuserInfo({\r\n//           ...userInfo, name: e.target.value\r\n//         })}\r\n//       />\r\n//       <input type=\"text\"\r\n//         value={userInfo.lastname}\r\n//         onChange={(e) => setuserInfo({\r\n//           ...userInfo, lastname: e.target.value\r\n//         })}\r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n\r\n// export const MyComponent = props => {\r\n//   // JSX -> DOM node\r\n//   const [myName, setmyName] = React.useState('John Doe')\r\n//   return (\r\n//     <>\r\n//       <h4>{myName}</h4>\r\n//       <input type=\"text\" value={myName} \r\n//       onChange={(e) => setmyName(e.target.value)}>\r\n\r\n//       </input>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export const MyComponent = () => {\r\n//   const [username, setusername] = React.useState(\"\");\r\n//   // unmount\r\n//   useEffect(() => {\r\n//     setTimeout(() => {\r\n//       setusername(\"超\")\r\n//     }, 1500)\r\n//   }, [])\r\n//   return (\r\n//     <>\r\n//       <h4>{username}</h4>\r\n//       <input \r\n//         type=\"text\" \r\n//         value={username} \r\n//         onChange={(e) => setusername(e.target.value)} \r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export const MyComponent = () => {\r\n//   const [visible, setvisible] = useState(false);   // 不是共享状态  用useState\r\n//   return (\r\n//     <>\r\n//       {visible && <MyChildComponent />}\r\n//       <button onClick={() => setvisible(!visible)}>\r\n//         Toggle Child component visibility\r\n//       </button>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// const MyChildComponent = () => {\r\n//   const [userInfo, setuserInfo] = useState({\r\n//     name: 'John',\r\n//     lastname: 'Doe'\r\n//   })\r\n//   useEffect(() => {\r\n//     console.log('called when the component is mounted.');\r\n//     return (\r\n//       () => {\r\n//         console.log('Called on component unmounted, check the [] on the react use effect')\r\n//       }\r\n//     )\r\n//   })\r\n//   return (\r\n//     <div>\r\n//       <h3>\r\n//         {userInfo.name} {userInfo.lastname}\r\n//       </h3>\r\n//       <input \r\n//         type=\"text\"\r\n//         onChange={e => setuserInfo({...userInfo, name: e.target.value})}\r\n//       />\r\n//     </div>\r\n//   )\r\n// }"]},"metadata":{},"sourceType":"module"}